 /******************************************************
 * PLEASE DO NOT EDIT THIS FILE
 * the verification process may break
 * ***************************************************/

'use strict';

var express = require('express');
var request = require('request');
var bodyParser = require('body-parser');
var mongo = require('mongodb').MongoClient
var urlDB = 'mongodb://' + process.env.DB_USER +':' + process.env.DB_PASS + '@ds141351.mlab.com:41351/image_search_history';
var app = express();

app.use('/public', express.static(process.cwd() + '/public'));
app.use(bodyParser.json());
  
app.route('/')
    .get(function(req, res) {
		  res.sendFile(process.cwd() + '/views/index.html');
    })

app.get('/api/latest/imagesearch/', function(req, res){
  mongo.connect(urlDB, function(err, db) {
    if (err) throw err;
    var collection = db.collection('search_history');
    
    db.close();
  })
})

app.get('/api/imagesearch/:search', function(req, res){
  
  getJSON(req.params.search, req.query.offset, function(data){
    var data = data.items
    
    var dataJSON = []
    for(var i in data){
        dataJSON.push({
          "url":data[i].link,
          "snippet":data[i].title,
          "thumbnail":data[i].image.thumbnailLink,
          "context":data[i].image.contextLink
        });
    }
    res.json(dataJSON);
  })
})

function getJSON(search, offset, callback){
    var url = 'https://www.googleapis.com/customsearch/v1?key=' + process.env.KEY + '&cx=' + process.env.CX + '&searchType=image&start=' + (offset || '1') + '&q='+search;
  request({
    url: url,
    json: true
  }, function(err, responce, body){
    
    callback(body)
  })
}

app.listen(process.env.PORT, function () {
  console.log('Node.js listening ...');
});

